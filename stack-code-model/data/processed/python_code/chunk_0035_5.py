package src.game{	import net.fpp.common.starling.StaticAssetManager;	import rv2.sound.SoundHandler;	import src.assets.Fonts;	import src.game.events.GameGuiEvent;	import starling.display.Button;	import starling.display.Image;	import starling.display.Quad;	import starling.display.Sprite;	import starling.events.Event;	import starling.text.TextField;	import starling.text.TextFormat;	import starling.utils.Align;	public class PausePanel extends Sprite	{		private const BUTTON_X_OFFSET:Number = 10;		private var _back:Quad;		private var _titleTextBack:Image;		private var _buttonContainer:Sprite;		private var _resumeButton:Button;		private var _restartButton:Button;		private var _exitButton:Button;		private var _titleText:TextField;		public function PausePanel():void		{			addEventListener( Event.ADDED_TO_STAGE, loaded );		}		private function loaded( event:Event ):void		{			removeEventListener( Event.ADDED_TO_STAGE, loaded );			this._back = new Quad( stage.stageWidth, stage.stageHeight, 0x000000 );			this._back.width = this.stage.stageWidth;			this._back.height = this.stage.stageHeight;			this._back.alpha = .5;			this.addChild( this._back );			addChild( _titleTextBack = new Image( StaticAssetManager.instance.getTexture( 'title_text_back' ) ) );			_titleTextBack.y = stage.stageHeight / 2 - 100;			var titleTextFormat:TextFormat = new TextFormat();			titleTextFormat.font = Fonts.getAachenLightFont().name;			titleTextFormat.size = 20;			titleTextFormat.color = 0xFFFFFF;			titleTextFormat.verticalAlign = Align.CENTER;			addChild( _titleText = new TextField( stage.stageWidth, _titleTextBack.height, "Paused", titleTextFormat ) );			_titleText.y = _titleTextBack.y + _titleTextBack.height / 2 - _titleText.height / 2 + 4;			addChild( _buttonContainer = new Sprite );			_buttonContainer.addChild( _resumeButton = new Button( StaticAssetManager.instance.getTexture( "large_resume_button" ) ) );			_resumeButton.addEventListener( Event.TRIGGERED, resumeRequest );			_buttonContainer.addChild( _restartButton = new Button( StaticAssetManager.instance.getTexture( "large_restart_button" ) ) );			_restartButton.x = _resumeButton.x + _resumeButton.width + BUTTON_X_OFFSET;			_restartButton.addEventListener( Event.TRIGGERED, restartRequest );			_buttonContainer.addChild( _exitButton = new Button( StaticAssetManager.instance.getTexture( "large_exit_button" ) ) );			_exitButton.x = _restartButton.x + _restartButton.width + BUTTON_X_OFFSET;			_exitButton.addEventListener( Event.TRIGGERED, exitRequest );			_buttonContainer.x = stage.stageWidth / 2 - _buttonContainer.width / 2;			_buttonContainer.y = _titleTextBack.y + _titleTextBack.height + 20;		}		private function resumeRequest( event:Event ):void		{			SoundHandler.play( 'SND_BUTTON' );			disableButtons();			dispatchEvent( new GameGuiEvent( GameGuiEvent.RESUME_REQUEST ) );		}		private function restartRequest( event:Event ):void		{			SoundHandler.play( 'SND_BUTTON' );			disableButtons();			dispatchEvent( new GameGuiEvent( GameGuiEvent.INGAME_RESTART_REQUEST ) );		}		private function exitRequest( event:Event ):void		{			SoundHandler.play( 'SND_BUTTON' );			disableButtons();			dispatchEvent( new GameGuiEvent( GameGuiEvent.GAME_END_REQUEST ) );		}		public function enableButtons():void		{			_resumeButton.addEventListener( Event.TRIGGERED, resumeRequest );			_restartButton.addEventListener( Event.TRIGGERED, restartRequest );			_exitButton.addEventListener( Event.TRIGGERED, exitRequest );		}		private function disableButtons():void		{			_resumeButton.removeEventListener( Event.TRIGGERED, resumeRequest );			_restartButton.removeEventListener( Event.TRIGGERED, restartRequest );			_exitButton.removeEventListener( Event.TRIGGERED, exitRequest );		}		override public function dispose():void		{			_back.removeFromParent( true );			_back = null;			_titleText.removeFromParent( true );			_titleText = null;			disableButtons();			_resumeButton.removeFromParent( true );			_resumeButton = null;			_restartButton.removeFromParent( true );			_restartButton = null;			_exitButton.removeFromParent( true );			_exitButton = null;			_buttonContainer.removeFromParent( true );			_buttonContainer = null;			super.dispose();		}	}}