package  {		import flash.display.MovieClip;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.events.Event;		public class XMLAtomNamespace extends MovieClip {				// THIS IS NEEDED IF THE XML DOCUMENT IS USING ATOM		// SEE XML EXAMPLE		// <feed xmlns:im="http://itunes.apple.com/rss" xmlns="http://www.w3.org/2005/Atom" xml:lang="en">		private var ATOM:Namespace = new Namespace("http://www.w3.org/2005/Atom");		private var ldr:URLLoader;		private var feedXML:XML;		// THE XMLLIST IS LIKE A SHORTCUT FOR LESS TYPING :)		private var entries:XMLList;		// NAMESPACE		private var im:Namespace;				public function XMLAtomNamespace() {			// constructor code			init();		}				private function init():void		{			ldr = new URLLoader();			ldr.load(new URLRequest("http://itunes.apple.com/us/rss/topalbums/limit=100/xml"));			ldr.addEventListener(Event.COMPLETE, onXMLLoad);		}		private function onXMLLoad(e:Event):void		{			feedXML = new XML(e.target.data);			// HERE'S THAT SHORTCUT I PROMISED!			// USE DOUBLE :: TO ACCESS XML DATA 			entries = feedXML.ATOM::entry;			// RETURNS NUMBER OF TIMES THIS CATEGORY APPEARS OVER TOTAL ENTRIES						// this allows for namespace communication			im = feedXML.namespace("im")			// the double :: allows communication in the namespace			// EXAMPLE			// feed.channel.item.mm::Artist.dc::title			trace(feedXML.ATOM::entry.im::name[0]) 		}	}}