/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    components
 *  Class:      ProductItem
 *  Source:     C:\Users\Oliver\Adobe Flash Builder 4.6\FlexGrocer\src\components\ProductItem.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2015.04.14 08:13:18 CEST
 */

package components
{

import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.events.MouseEvent;
import flash.external.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.IStateClient2;
import mx.core.mx_internal;
import mx.filters.*;
import mx.states.AddItems;
import mx.states.State;
import mx.styles.*;
import spark.components.Button;
import spark.components.Group;
import spark.components.Image;
import spark.components.Label;
import spark.components.RichText;
import spark.components.VGroup;
import spark.layouts.HorizontalLayout;


[States("State1", "expanded")]

//  begin class def
public class ProductItem
    extends spark.components.Group
    implements mx.binding.IBindingClient, mx.core.IStateClient2
{

    //  instance variables
/**
 * @private
 **/
    public var _ProductItem_Image1 : spark.components.Image;

/**
 * @private
 **/
    public var _ProductItem_Label3 : spark.components.Label;

/**
 * @private
 **/
    public var _ProductItem_Label4 : spark.components.Label;

/**
 * @private
 **/
    public var _ProductItem_RichText1 : spark.components.RichText;

    [Inspectable]
/**
 * @private
 **/
    public var _ProductItem_VGroup2 : spark.components.VGroup;

    [Bindable]
	/**
 * @private
 **/
    public var add : spark.components.Button;

    [Bindable]
	/**
 * @private
 **/
    public var price : spark.components.Label;

    [Bindable]
	/**
 * @private
 **/
    public var prodName : spark.components.Label;

    [Bindable]
	/**
 * @private
 **/
    public var products : spark.components.VGroup;

    [Bindable]
	/**
 * @private
 **/
    public var remove : spark.components.Button;


    //  type-import dummies



    //  constructor (Flex display object)
    /**
     * @private
     **/
    public function ProductItem()
    {
        super();

        mx_internal::_document = this;


        var bindings:Array = _ProductItem_bindingsSetup();
        var watchers:Array = [];

        var target:Object = this;

        if (_watcherSetupUtil == null)
        {
            var watcherSetupUtilClass:Object = getDefinitionByName("_components_ProductItemWatcherSetupUtil");
            watcherSetupUtilClass["init"](null);
        }

        _watcherSetupUtil.setup(this,
                    function(propertyName:String):* { return target[propertyName]; },
                    function(propertyName:String):* { return ProductItem[propertyName]; },
                    bindings,
                    watchers);

        mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
        mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


        // layer initializers

       
        // properties
        this.layout = _ProductItem_HorizontalLayout1_c();
        this.mxmlContent = [_ProductItem_VGroup1_i()];
        this.currentState = "State1";


        // events

		var _ProductItem_VGroup2_factory:DeferredInstanceFromFunction = 
		  new mx.core.DeferredInstanceFromFunction(_ProductItem_VGroup2_i);


		states = [
		  new State ({
		    name: "State1",
		    overrides: [
		    ]
		  })
		  ,
		  new State ({
		    name: "expanded",
		    overrides: [
		      new AddItems().initializeFromObject({
		        itemsFactory: _ProductItem_VGroup2_factory,
		        destination: null,
		        propertyName: "mxmlContent",
		        position: "after",
		        relativeTo: ["products"]
		      })
		    ]
		  })
		];







        for (var i:uint = 0; i < bindings.length; i++)
        {
            Binding(bindings[i]).execute();
        }


    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings



                         
    }
 
    //  initialize()
    /**
     * @private
     **/
    override public function initialize():void
    {


        super.initialize();
    }


    //  scripts
    //  <Script>, line 13 - 35

			import cart.ShoppingCart;
			import cart.ShoppingCartItem;
			
			import valueObjects.Product;
			
			[Bindable]
			public var product:Product;
			
			public var shoppingCart:ShoppingCart;
			
			private function addToCart( product:Product ):void {
				var sci:ShoppingCartItem = new ShoppingCartItem( product );
				shoppingCart.addItem(sci);
			}
			
			protected function removeFromCart( product:Product ):void
			{
				var sci:ShoppingCartItem = new ShoppingCartItem( product );
				shoppingCart.removeItem(sci);
			}
			
		

    //  end scripts


    //  supporting function definitions for properties, events, styles, effects
private function _ProductItem_HorizontalLayout1_c() : spark.layouts.HorizontalLayout
{
	var temp : spark.layouts.HorizontalLayout = new spark.layouts.HorizontalLayout();
	return temp;
}

private function _ProductItem_VGroup1_i() : spark.components.VGroup
{
	var temp : spark.components.VGroup = new spark.components.VGroup();
	temp.mxmlContent = [_ProductItem_Label1_i(), _ProductItem_Image1_i(), _ProductItem_Label2_i(), _ProductItem_Button1_i(), _ProductItem_Button2_i()];
	temp.id = "products";
	if (!temp.document) temp.document = this;
	products = temp;
	mx.binding.BindingManager.executeBindings(this, "products", products);
	return temp;
}

private function _ProductItem_Label1_i() : spark.components.Label
{
	var temp : spark.components.Label = new spark.components.Label();
	temp.id = "prodName";
	if (!temp.document) temp.document = this;
	prodName = temp;
	mx.binding.BindingManager.executeBindings(this, "prodName", prodName);
	return temp;
}

private function _ProductItem_Image1_i() : spark.components.Image
{
	var temp : spark.components.Image = new spark.components.Image();
	temp.scaleMode = "zoom";
	temp.addEventListener("mouseOver", ___ProductItem_Image1_mouseOver);
	temp.addEventListener("mouseOut", ___ProductItem_Image1_mouseOut);
	temp.id = "_ProductItem_Image1";
	if (!temp.document) temp.document = this;
	_ProductItem_Image1 = temp;
	mx.binding.BindingManager.executeBindings(this, "_ProductItem_Image1", _ProductItem_Image1);
	return temp;
}

/**
 * @private
 **/
public function ___ProductItem_Image1_mouseOver(event:flash.events.MouseEvent):void
{
	this.currentState='expanded'
}

/**
 * @private
 **/
public function ___ProductItem_Image1_mouseOut(event:flash.events.MouseEvent):void
{
	this.currentState='State1'
}

private function _ProductItem_Label2_i() : spark.components.Label
{
	var temp : spark.components.Label = new spark.components.Label();
	temp.id = "price";
	if (!temp.document) temp.document = this;
	price = temp;
	mx.binding.BindingManager.executeBindings(this, "price", price);
	return temp;
}

private function _ProductItem_Button1_i() : spark.components.Button
{
	var temp : spark.components.Button = new spark.components.Button();
	temp.label = "AddToCart";
	temp.addEventListener("click", __add_click);
	temp.id = "add";
	if (!temp.document) temp.document = this;
	add = temp;
	mx.binding.BindingManager.executeBindings(this, "add", add);
	return temp;
}

/**
 * @private
 **/
public function __add_click(event:flash.events.MouseEvent):void
{
	addToCart( product )
}

private function _ProductItem_Button2_i() : spark.components.Button
{
	var temp : spark.components.Button = new spark.components.Button();
	temp.label = "Remove From Cart";
	temp.addEventListener("click", __remove_click);
	temp.id = "remove";
	if (!temp.document) temp.document = this;
	remove = temp;
	mx.binding.BindingManager.executeBindings(this, "remove", remove);
	return temp;
}

/**
 * @private
 **/
public function __remove_click(event:flash.events.MouseEvent):void
{
	removeFromCart( product )
}

private function _ProductItem_VGroup2_i() : spark.components.VGroup
{
	var temp : spark.components.VGroup = new spark.components.VGroup();
	temp.percentWidth = 100.0;
	temp.x = 200;
	temp.mxmlContent = [_ProductItem_RichText1_i(), _ProductItem_Label3_i(), _ProductItem_Label4_i()];
	temp.id = "_ProductItem_VGroup2";
	if (!temp.document) temp.document = this;
	_ProductItem_VGroup2 = temp;
	mx.binding.BindingManager.executeBindings(this, "_ProductItem_VGroup2", _ProductItem_VGroup2);
	return temp;
}

private function _ProductItem_RichText1_i() : spark.components.RichText
{
	var temp : spark.components.RichText = new spark.components.RichText();
	temp.percentWidth = 50.0;
	temp.id = "_ProductItem_RichText1";
	if (!temp.document) temp.document = this;
	_ProductItem_RichText1 = temp;
	mx.binding.BindingManager.executeBindings(this, "_ProductItem_RichText1", _ProductItem_RichText1);
	return temp;
}

private function _ProductItem_Label3_i() : spark.components.Label
{
	var temp : spark.components.Label = new spark.components.Label();
	temp.text = "Certified Organic";
	temp.id = "_ProductItem_Label3";
	if (!temp.document) temp.document = this;
	_ProductItem_Label3 = temp;
	mx.binding.BindingManager.executeBindings(this, "_ProductItem_Label3", _ProductItem_Label3);
	return temp;
}

private function _ProductItem_Label4_i() : spark.components.Label
{
	var temp : spark.components.Label = new spark.components.Label();
	temp.text = "Low Fat";
	temp.id = "_ProductItem_Label4";
	if (!temp.document) temp.document = this;
	_ProductItem_Label4 = temp;
	mx.binding.BindingManager.executeBindings(this, "_ProductItem_Label4", _ProductItem_Label4);
	return temp;
}


    //  binding mgmt
    private function _ProductItem_bindingsSetup():Array
    {
        var result:Array = [];

        result[0] = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (product.prodName);
                return (result == undefined ? null : String(result));
            },
            null,
            "prodName.text"
            );

        result[1] = new mx.binding.Binding(this,
            function():Object
            {

                return "assets/" + (product.imageName);
            },
            null,
            "_ProductItem_Image1.source"
            );

        result[2] = new mx.binding.Binding(this,
            function():String
            {
                var result:* = "$" + (product.listPrice);
                return (result == undefined ? null : String(result));
            },
            null,
            "price.text"
            );

        result[3] = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (product.description);
                return (result == undefined ? null : String(result));
            },
            null,
            "_ProductItem_RichText1.text"
            );

        result[4] = new mx.binding.Binding(this,
            function():Boolean
            {

                return (product.isOrganic);
            },
            null,
            "_ProductItem_Label3.visible"
            );

        result[5] = new mx.binding.Binding(this,
            function():Boolean
            {

                return (product.isLowFat);
            },
            null,
            "_ProductItem_Label4.visible"
            );


        return result;
    }


    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil2):void
    {
        (ProductItem)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil2;



    //  embed carrier vars
    //  end embed carrier vars

    //  binding management vars
    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

//  end class def
}

//  end package def
}