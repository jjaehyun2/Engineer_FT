package {	import flash.display.Sprite;	import flash.events.Event;	import gainer.*;	public class SignalScopeApp extends Sprite {		// To change number of channels, modifiy this constant		// 表示するチャンネル数を変更するにはこの定数を変更する		private const NUM_AIN_CHANNELS:int = 4;		private const NUM_DIN_CHANNELS:int = 4;		private const NUM_CHANNELS:int = NUM_AIN_CHANNELS + NUM_DIN_CHANNELS;		private var _gio:Gainer;		private var scope:SignalScope;		private var scopes:Array;		public function SignalScopeApp() {			_gio = new Gainer("localhost", 2000, Gainer.MODE1, true);			scopes = new Array(NUM_CHANNELS);			trace(scopes);			for (var i:int = 0; i < NUM_CHANNELS; i++) {                if (i < NUM_AIN_CHANNELS) {				    scopes[i] = new SignalScope(10, 10 + (60 * i), 200, "ain " + i, true);				} else {				    scopes[i] = new SignalScope(10 + 180, 10 + (60 * (i - NUM_AIN_CHANNELS)), 200, "din " + (i - NUM_AIN_CHANNELS), false);			    }				addChild(scopes[i]);				scopes[i].update(0);			}			// I/Oモジュールの準備が完了した時に呼ばれるイベントハンドラをセット			_gio.onReady = _start;		}		// I/Oモジュールの準備が完了したら以下を実行		private function _start():void {			// アナログ入力の連続取得を開始			_gio.beginAnalogInput();			// デジタル入力の連続取得を開始			_gio.beginDigitalInput();			addEventListener(Event.ENTER_FRAME, loop);		}		private function loop(e:Event):void {			for (var i:int = 0; i < NUM_CHANNELS; i++) {                if (i < NUM_AIN_CHANNELS) {				    scopes[i].update(_gio.analogInput[i]);			    } else {				    scopes[i].update(_gio.digitalInput[i - NUM_AIN_CHANNELS] ? 255 : 0);			    }			}		}	}}