package {

	import net.wooga.selectors.usagepatterns.SelectorPool;

	public class ParsingSpeedTest extends BasicProfilingSprite {


		override protected function performAction():void {

			for (var i:int = 0; i < 100; ++i) {
				var selectorPool:SelectorPool = _selectorFactory.createSelectorPool();

				selectorPool.addSelector("Label");
				selectorPool.addSelector("HeadsUpDisplay");
				selectorPool.addSelector("#leftResourceContainer");
				selectorPool.addSelector("#centerResourceContainer");
				selectorPool.addSelector("#rightResourceContainer");
				selectorPool.addSelector("ResourceView");
				selectorPool.addSelector("ResourceView > #label");
				selectorPool.addSelector("ResourceView > Label > TextField");
				selectorPool.addSelector("#populationResource > #label");
				selectorPool.addSelector("#energyResource > #label");
				selectorPool.addSelector("#goldResource");
				selectorPool.addSelector("#woodResource");
				selectorPool.addSelector("#stoneResource");
				selectorPool.addSelector("#foodResource");
				selectorPool.addSelector("#populationResource");
				selectorPool.addSelector("#energyResource");
				selectorPool.addSelector("#xpResource");
				selectorPool.addSelector("Sprite#missionIconContainer");
				selectorPool.addSelector("Sprite#missionIconContainer > MissionIconView");
				selectorPool.addSelector("Sprite#missionIconContainer > MissionIconView:hover");
				selectorPool.addSelector("FriendBarView");
				selectorPool.addSelector("FriendBarView > Sprite#cityName");
				selectorPool.addSelector("FriendBarView > Sprite#friends");
				selectorPool.addSelector("FriendBarView > Sprite#friends > #friendContainer");
				selectorPool.addSelector("FriendBarView > Sprite#friends > #friendContainer > FriendView");
				selectorPool.addSelector("VisitFriendButton");
				selectorPool.addSelector("#buttonContainer");
				selectorPool.addSelector("#buttonContainer > :is-a(Button)");
				selectorPool.addSelector("#buttonContainer > ShowBattleResultPopupButton");
				selectorPool.addSelector("#buttonContainer > :is-a(Button):hover");
				selectorPool.addSelector("#buttonContainer > :is-a(Button):checked");
				selectorPool.addSelector("ScrollPane");
				selectorPool.addSelector("ScrollPane > Button");
				selectorPool.addSelector(":is-a(ScrollPane) > Button#BtnSkipLeft");
				selectorPool.addSelector(":is-a(ScrollPane) > Button#BtnSkipRight");
				selectorPool.addSelector("#popupCloseButton");
				selectorPool.addSelector("#popupBackground");
				selectorPool.addSelector("#popupHeadlineLabel");
				selectorPool.addSelector("#popupHeadlineLabel > TextField");
				selectorPool.addSelector("NotEnoughStoragePopup > PopupCloseButton, NotEnoughRequirementsPopup > PopupCloseButton, NotEnoughResourcesPopup > PopupCloseButton, ConfirmationPopup > PopupCloseButton, LevelUpPopup > PopupCloseButton, AlertPopup > PopupCloseButton, ShowRemaindersPopup > PopupCloseButton");
				selectorPool.addSelector("NotEnoughStoragePopup > Label, NotEnoughRequirementsPopup > Label, NotEnoughResourcesPopup > Label, ConfirmationPopup > Label, LevelUpPopup > Label, AlertPopup > Label");
				selectorPool.addSelector("ShopPopup");
				selectorPool.addSelector("ShopPopup > PopupCloseButton");
				selectorPool.addSelector("ShopPopup > Button");
				selectorPool.addSelector("ShopPopup > #navigationBar");
				selectorPool.addSelector("ShopPopup > #navigationBar > LabelButton");
				selectorPool.addSelector("ShopPopup > #navigationBar > LabelButton:hover");
				selectorPool.addSelector("ShopPopup > #navigationBar > LabelButton > Label");
				selectorPool.addSelector("ShopPopup > #navigationBar > LabelButton > Label > TextField");
				selectorPool.addSelector("ShopPopup > #navigationBar > LabelButton:checked > Label > TextField");
				selectorPool.addSelector("ShopPopup TabContent");
				selectorPool.addSelector("PageContent");
				selectorPool.addSelector("PageContent > #pageLabel");
				selectorPool.addSelector("PageContent > Label#pageLabel > TextField");
				selectorPool.addSelector("PageContent #scrollContainer");
				selectorPool.addSelector("#pagesContainer #page");
				selectorPool.addSelector("ShopItemView");
				selectorPool.addSelector("ShopItemView > #buyButton > Label");
				selectorPool.addSelector("ShopItemView > #buyButton > Label > TextField");
				selectorPool.addSelector("ShopItemView > Label#itemName");
				selectorPool.addSelector("ShopItemView > Label#itemName > TextField");
				selectorPool.addSelector("ShopItemView > #requiresValueLabel");
				selectorPool.addSelector("ShopItemView > #requiresValueLabel > TextField");
				selectorPool.addSelector("ShopItemView > #requiresLabel");
				selectorPool.addSelector("ShopItemView > #requiresLabel > TextField");
				selectorPool.addSelector("PageContent > Button");
				selectorPool.addSelector("PageContent > Button#BtnSkipLeft");
				selectorPool.addSelector("PageContent > Button#BtnSkipRight");
				selectorPool.addSelector("InventoryPopup");
				selectorPool.addSelector("InventoryPopup > PopupCloseButton");
				selectorPool.addSelector("InventoryPopup > Button");
				selectorPool.addSelector("InventoryPopup > PopupCloseButton");
				selectorPool.addSelector("InventoryPopup > ScrollPane");
				selectorPool.addSelector("InventoryItemView");
				selectorPool.addSelector("InventoryItemView > #icon");
				selectorPool.addSelector("SelectContractPopup");
				selectorPool.addSelector("SelectContractPopup > PopupCloseButton");
				selectorPool.addSelector("SelectContractPopup > #contractContainer");
				selectorPool.addSelector("SelectContractPopup > #contractContainer > ContractView");
				selectorPool.addSelector("SelectContractPopup > #contractContainer > ContractView > *");
				selectorPool.addSelector("SelectContractPopup > #contractContainer > ContractView > Label");
				selectorPool.addSelector("NotEnoughStoragePopup, NotEnoughRequirementsPopup, NotEnoughResourcesPopup, ConfirmationPopup, LevelUpPopup, AlertPopup");
				selectorPool.addSelector("ConfirmationPopup > LabelButton");
				selectorPool.addSelector("ConfirmationPopup > #ok");
				selectorPool.addSelector("ConfirmationPopup > #cancel");
				selectorPool.addSelector("ConfirmationPopup > LabelButton > Label");
				selectorPool.addSelector("LevelUpPopup > LabelButton");
				selectorPool.addSelector("LevelUpPopup > #ok");
				selectorPool.addSelector("LevelUpPopup > LabelButton > Label");
				selectorPool.addSelector("LevelButtonView");
				selectorPool.addSelector("LevelButtonView > Label");
				selectorPool.addSelector("ShowRemaindersPopup");
				selectorPool.addSelector("ShowRemaindersPopup > LabelButton#ok");
				selectorPool.addSelector("ShowRemaindersPopup > LabelButton > Label");
				selectorPool.addSelector("TrainingPopup, AcademyPopup");
				selectorPool.addSelector("TrainingPopup PopupCloseButton, AcademyPopup PopupCloseButton");
				selectorPool.addSelector("ContractItemView");
				selectorPool.addSelector("ContractItemView > Label");
				selectorPool.addSelector("ContractItemView > #unlockButton > Label");
				selectorPool.addSelector("TrainingRunningContractItemView > Button, AcademyRunningContractItemView > Button");
				selectorPool.addSelector("ContractItemView > Button");
				selectorPool.addSelector("TrainingRunningContractItemView, AcademyRunningContractItemView");
				selectorPool.addSelector("#contractDetailsView");
				selectorPool.addSelector("#contractDetailsTypeLabel");
				selectorPool.addSelector("#contractDetailsLevelLabel");
				selectorPool.addSelector("#contractDetailsDurationLabel");
				selectorPool.addSelector("#contractDetailsView > LabelButton");
				selectorPool.addSelector("ContractsQueueView");
				selectorPool.addSelector("EnemySelectionPopup");
				selectorPool.addSelector("EnemySelectionPopup > #nameLabel");
				selectorPool.addSelector("EnemySelectionPopup PopupCloseButton");
				selectorPool.addSelector("EnemySelectionPopup > #navigationBar");
				selectorPool.addSelector("EnemySelectionPopup > #navigationBar Label");
				selectorPool.addSelector("EnemySelectionPopup > #navigationBar > #search");
				selectorPool.addSelector("EnemySelectionPopup > #navigationBar > NavigationButton > Label > TextField");
				selectorPool.addSelector("EnemySelectionPopup TabContent");
				selectorPool.addSelector("DataPage DataGridHeader");
				selectorPool.addSelector("DataPage DataGridHeaderButton");
				selectorPool.addSelector("DataPage PageableDataGrid");
				selectorPool.addSelector("DataPage PageableDataGrid > #scrollContainer");
				selectorPool.addSelector("DataPage PageableDataGrid > #scrollContainer DataGrid");
				selectorPool.addSelector("DataPage #dataPages > #pageLabel");
				selectorPool.addSelector("DataPage #dataPages > Label#pageLabel > TextField");
				selectorPool.addSelector("DataPage #dataPages #pagesContainer");
				selectorPool.addSelector("DataPage #dataPages > Button#BtnSkipLeft");
				selectorPool.addSelector("DataPage #dataPages > Button#BtnSkipRight");
				selectorPool.addSelector("DataPage #dataPages #pagesContainer");
				selectorPool.addSelector("DataPage #dataPages > Button");
				selectorPool.addSelector("#dataGridRow > Label");
				selectorPool.addSelector("#dataGridRow > Label > TextField");
				selectorPool.addSelector("#dataGridRow #colLevel");
				selectorPool.addSelector("#dataGridRow #colLevel > TextField");
				selectorPool.addSelector("#dataGridRow #colStatus");
				selectorPool.addSelector("#dataGridRow #colStatus > TextField");
				selectorPool.addSelector("#dataGridRow > #colInteraction");
				selectorPool.addSelector("#dataGridRow > #colInteraction > #scoutBtn");
				selectorPool.addSelector("#dataGridRow > #colInteraction > #messageBtn");
				selectorPool.addSelector("#dataGridRow > #colInteraction > #scoutBtn TextField");
				selectorPool.addSelector("#dataGridRow > #colInteraction > #messageBtn TextField");
				selectorPool.addSelector("EnemySelectionPopup > #searchInput");
				selectorPool.addSelector("BattleResultPopup");
				selectorPool.addSelector("BattleResultPopup > #suggestionText, BattleResultPopup > #battleTips");
				selectorPool.addSelector("BattleResultPopup > #attackerDisplay, BattleResultPopup > #defenderDisplay");
				selectorPool.addSelector("BattleResultPopup > #attackerDisplay");
				selectorPool.addSelector("BattleResultPopup > #defenderDisplay");
				selectorPool.addSelector("PlayerDisplay > #playerImage");
				selectorPool.addSelector("PlayerDisplay > #shield");
				selectorPool.addSelector("PlayerDisplay > #shield > Label");
				selectorPool.addSelector("PlayerDisplay > #playerName");
				selectorPool.addSelector("BattleResultPopup > #troopDisplay");
				selectorPool.addSelector("BattleResultPopup > #suggestionText");
				selectorPool.addSelector("BattleResultPopup > #battleTips");
				selectorPool.addSelector("BattleResultPopup > #troopsLost, BattleResultPopup > #buildingsDestroyed");
				selectorPool.addSelector("BattleResultPopup > #troopsLost");
				selectorPool.addSelector("BattleResultPopup > #buildingsDestroyed");
				selectorPool.addSelector("BattleResultPopup > AmountWithInfoBox");
				selectorPool.addSelector("BattleResultPopup > AmountWithInfoBox > #headline");
				selectorPool.addSelector("BattleResultPopup > AmountWithInfoBox > #amount");
				selectorPool.addSelector("BattleResultPopup > AmountWithInfoBox > #infoButton");
				selectorPool.addSelector("BattleResultPopup > AmountWithInfoBox > #infoButton > #infoBox");
				selectorPool.addSelector("BattleResultPopup > AmountWithInfoBox > #infoButton:hover > #infoBox");
				selectorPool.addSelector("AmountWithInfoBox > #infoButton:hover > #infoBox > #row");
				selectorPool.addSelector("AmountWithInfoBox > #infoButton:hover > #infoBox > #row > #key");
				selectorPool.addSelector("#infoButton");
				selectorPool.addSelector("#infoButton:hover");
				selectorPool.addSelector("BattleResultPopup > #resourcesLooted");
				selectorPool.addSelector("BattleResultPopup > #resourcesLooted > #headline");
				selectorPool.addSelector("BattleResultPopup > #resourcesLooted > LootedResourceView");
				selectorPool.addSelector("BattleResultPopup > #resourcesLooted > LootedResourceView > #amount");
				selectorPool.addSelector("BattleResultPopup > #resourcesLooted > LootedResourceView > #icon");
				selectorPool.addSelector("BattleResultPopup > #resourcesLooted > LootedResourceView#wood > #icon");
				selectorPool.addSelector("BattleResultPopup > #resourcesLooted > LootedResourceView#gold > #icon");
				selectorPool.addSelector("BattleResultPopup > #resourcesLooted > LootedResourceView#food > #icon");
				selectorPool.addSelector("BattleResultPopup > #resourcesLooted > LootedResourceView#stone > #icon");
				selectorPool.addSelector("BattleResultPopup > #gainedExperience, BattleResultPopup > #gainedInfamy");
				selectorPool.addSelector("BattleResultPopup > NumberWithIcon > #infoButton > #infoBox");
				selectorPool.addSelector("BattleResultPopup > NumberWithIcon > #infoButton:hover > #infoBox");
				selectorPool.addSelector("BattleResultPopup > NumberWithIcon > #icon");
				selectorPool.addSelector("BattleResultPopup > NumberWithIcon > #amount");
				selectorPool.addSelector("BattleResultPopup > #gainedExperience > #infoButton");
				selectorPool.addSelector("BattleResultPopup > NumberWithIcon > #infoButton");
				selectorPool.addSelector("BattleResultPopup > #gainedExperience");
				selectorPool.addSelector("BattleResultPopup > #gainedInfamy");
				selectorPool.addSelector("BattleResultPopup > #itemsLooted");
				selectorPool.addSelector("BattleResultPopup > #itemsLooted > #headline");
				selectorPool.addSelector("BattleResultPopup > #itemsLooted > LootedItemView");
				selectorPool.addSelector("BattleResultPopup > #itemsLooted > LootedItemView > #amount");
				selectorPool.addSelector("BattleResultPopup > #itemsLooted > LootedItemView > #icon");
				selectorPool.addSelector("BattleResultPopup > #itemsLooted > LootedItemView > #icon > :is-a(Sprite)");
				selectorPool.addSelector("BattleResultPopup > #buttonsContainer");
				selectorPool.addSelector("BattleResultPopup > #buttonsContainer > LabelButton");
				selectorPool.addSelector("BattleResultPopup > #buttonsContainer > LabelButton:hover");
				selectorPool.addSelector("#combatContainer");
				selectorPool.addSelector("#combatContainer > #buttonContainer");
				selectorPool.addSelector(":is-a(UnitsView)");
				selectorPool.addSelector(":is-a(UnitsView) > Button#BtnSkipLeft");
				selectorPool.addSelector(":is-a(UnitsView) > Button#BtnSkipRight");
				selectorPool.addSelector(":is-a(UnitAmountView)");
				selectorPool.addSelector(":is-a(UnitAmountView) > #all");
				selectorPool.addSelector(":is-a(UnitAmountView)[selectedAmount='0'] > #minus");
				selectorPool.addSelector(":is-a(UnitAmountView) > #minus");
				selectorPool.addSelector(":is-a(UnitAmountView) > #count");
				selectorPool.addSelector(":is-a(UnitAmountView) > #icon");
				selectorPool.addSelector("#metaInfoView");
				selectorPool.addSelector("#MetaNameLabel");
				selectorPool.addSelector("#MetaLevelLabel");
				selectorPool.addSelector("#MetaUpgradeButton");
			}


		}
	}
}