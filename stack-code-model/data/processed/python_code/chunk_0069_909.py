package {		import flash.display.Bitmap;	import flash.display.MovieClip;	import flash.display.BitmapData;	import flash.display.Scene;	import flash.events.Event;	import flash.geom.Point;	import flash.geom.Rectangle;	import flash.utils.getQualifiedClassName;		public class quoin extends MovieClip {		var bg_rect:Rectangle = new Rectangle(0, 0, 40, 50);		var sheet_rect:Rectangle = new Rectangle(0, 0, 100, 50);		var sheet_pt:Point = new Point(0, 0);		var canvas_bd:BitmapData = new BitmapData(40, 50, true, 0x000000);				var last_scene:Scene;				var tile_w:int = 40;		var tile_h:int = 50;		var tiles_length:int = 24;		var anim_index:int = 0;		var anim_count:int = 0;		var anim_delay:int = 0; // indicates the number of extra frames to hold each sheet's tile.								// (0 means each sheet tile is held for only 1 frame, 2 means each sheet tile is 3 frames)								// Also see note on frame 1 of Quoin.fla regarding how many frames each scene of the fla must have								/*if (this.instanceProps.type == 'xp') return 'scene:1';if (this.instanceProps.type == 'mood') return 'scene:2';if (this.instanceProps.type == 'energy') return 'scene:3';if (this.instanceProps.type == 'currants') return 'scene:4';if (this.instanceProps.type == 'mystery') return 'scene:5';if (this.instanceProps.type == 'favor') return 'scene:6';if (this.instanceProps.type == 'time') return 'scene:7';*/				var tile_sheetA:Array = [			new quoin_img_thumb(960, 50),			new quoin_mood_thumb(960, 50),			new quoin_energy_thumb(960, 50),			new quoin_currants_thumb(960, 50),			new quoin_mystery_thumb(960, 50),			new quoin_favor_thumb(960, 50),			new quoin_time_thumb(960, 50),			new quoin_qurazy_thumb(960, 50)		];		var tile_sheet:BitmapData;		var canvas_b:Bitmap;				public function quoin() {			init();		}						private function init() {			canvas_b = new Bitmap(canvas_bd);			addChild(canvas_b);			addEventListener(Event.ENTER_FRAME, gameLoop);		}						public function ssPerFrame(fnum:int) {			gameLoop();		}						public function gameLoop(e:Event = null) {			if (!last_scene || currentScene.name != last_scene.name) {				last_scene = currentScene;				tile_sheet = getSheetFromScene(currentScene);				anim_index = Math.floor(Math.random()*tiles_length); // start from a random point			}						drawBackground();			drawFromSheet();			stop();		}				private function getSheetFromScene(scene:Scene):BitmapData {			return tile_sheetA[parseInt(scene.name)-1];		}				private function drawBackground():void {			canvas_bd.fillRect(bg_rect, 0x00cc0000);		}				private function drawFromSheet():void {						if (anim_count == anim_delay) {				anim_index++;				anim_count = 0;				if (anim_index == tiles_length){					anim_index = 0;				}			} else {				anim_count++;			}						sheet_rect.x = int((anim_index % tiles_length))*tile_w;			sheet_rect.y = int((anim_index / tiles_length))*tile_h;			canvas_bd.copyPixels(tile_sheet, sheet_rect, sheet_pt);		}	}		}