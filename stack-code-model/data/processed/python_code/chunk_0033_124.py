/* * -*- Mode: Actionscript -*- * ************************************************************************* * * Copyright 2007-2009 Juice, Inc. *  * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at *  *     http://www.apache.org/licenses/LICENSE-2.0 *  * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. * * ************************************************************************* */package org.juicekit.visual.flash.controls {  import flash.display.DisplayObject;  import flash.display.MovieClip;  import flash.display.SimpleButton;  import flash.utils.Dictionary;  /**   * The DMAMap class wraps the Flash CS4 movie clip symbol to support   * programmatic access the the graphical market area elements.   *   * @author Jon Buffington   */  public class DMAMap extends MovieClip {  	  	    /**     * Constructor.  	 */    public function DMAMap() {      super();    }  	/**  	 * Return a graphical market area element as a SimpleButton instance.  	 *   	 * @param dmaName Is the name of the market area.  	 *   	 * @return Returns the graphical market area element as a SimpleButton  	 * instance or <code>null</code> if the element is not found.  	 */  	public function getDMA(dmaName:String):SimpleButton {      return getChildByName(dmaName.toUpperCase()) as SimpleButton;    }  	/**  	 * Return a dictionary of market area elements where the key is the  	 * instance name and the value is the SimpleButton object.  	 *   	 * @return Returns a <code>Dictionary</code> of market area elements  	 * where the key is an instance name <code>String</code>   	 * and the value is a <code>SimpleButton</code> object.  	 */  	public function get allDMAs():Dictionary {  	  const retVal:Dictionary = new Dictionary();  	  const n:int = numChildren;  	  var dispObj:DisplayObject;  	  for (var i:int = 0; i < n; ++i) {  	    dispObj = getChildAt(i);  	    if (dispObj is SimpleButton) {  	      retVal[dispObj.name] = dispObj;  	    }  	  }      return retVal;    }  }}