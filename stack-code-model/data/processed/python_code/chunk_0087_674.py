package  {		import flash.display.MovieClip;	import flash.events.Event;	import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.display.Loader;	import flash.net.URLRequest;		[SWF(width="100",height="100")]		public class GameBoardGeneration extends MovieClip {				private var board:Array = new Array();		// the offset represents every 10 pixels from the loaded image		private var offset:int = 10;				public function GameBoardGeneration() {			// constructor code			init();		}				private function init(){			buildBoard();			loadBoardImage();		}		// GAME BOARD		// CREATE AN ARRAY ON X COORDINATES		private function createXarray():Array{			var boardX:Array = new Array();			for(var i:int=0; i<offset; i++){				boardX[i] = true;			}			return boardX;		}		// COMPLETE THE BOARD WITH Y COORDINATES		private function buildBoard(){			for(var i:int=0; i<offset; i++){				board[i] = createXarray();			}		}		private function drawBoard(){			for(var i:int=0; i<board.length; i++){				for(var j:int=0; j<board.length; j++){				  if(board[i][j]){					var box:Box = drawBox(i*offset,j*offset);				  }				}			}		}		private function drawBox(xPos:int,yPos):Box{			var box:Box = new Box();			box.x = xPos;			box.y = yPos;			addChild(box);			return box;		}		private function loadBoardImage():void{			var loader:Loader = new Loader();			loader.load(new URLRequest("grid.png"));			loader.contentLoaderInfo.addEventListener(Event.COMPLETE, onLoadBoardImage);					}		function onLoadBoardImage(e:Event):void{			var bmpD:BitmapData = new BitmapData(100,100,true,0xFF000000);			var bmp:Bitmap = new Bitmap(bmpD);						bmpD.draw(e.target.content);			//addChild(bmp);			getPixelInfo(bmpD);			e.target.content.removeEventListener(Event.COMPLETE, onLoadBoardImage);		}		function getPixelInfo(bmpD:BitmapData):void{				// the rate is similar to the resolution			for(var x:int=0; x<100; x+=offset){				for(var y:int=0; y<100; y+=offset){					//trace(bmpD.getPixel(x,y))					if(bmpD.getPixel(x,y)==0xFFFFFF){						trace("found one")						board[x/10][y/10] = false;					}				}			}		drawBoard();			}	}	}