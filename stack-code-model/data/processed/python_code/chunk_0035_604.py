/** * @package nl.eriknoorland.parallax */package nl.eriknoorland.parallax{	import flash.geom.Rectangle;		public class View{		protected var _x:int;		protected var _y:int;		protected var _width:int;		protected var _height:int;		protected var _boundTop:Number;		protected var _boundRight:Number;		protected var _boundBottom:Number;		protected var _boundLeft:Number;				/**		 * View - Constructor		 * @param Rectangle		 * @param Number [optional]		 * @param Number [optional]		 * @param Number [optional]		 * @param Number [optional]		 */		public function View(r:Rectangle, boundTop:Number = NaN, boundRight:Number = NaN, boundBottom:Number = NaN, boundLeft:Number = NaN){			_x = r.x;			_y = r.y;			_width = r.width;			_height = r.height;			_boundTop = (isNaN(boundTop) ? _y : boundTop);			_boundRight = (isNaN(boundRight) ? _x+_width : boundRight);			_boundBottom = (isNaN(boundBottom) ? _y+_height : boundBottom);			_boundLeft = (isNaN(boundLeft) ? _x : boundLeft);		}				/**		 * Returns the width position		 * @return int		 */		public function get x():int{			return _x;		}				/**		 * Returns the y position		 * @return int		 */		public function get y():int{			return _y;		}				/**		 * Returns the width		 * @return int		 */		public function get width():int{			return _width;		}				/**		 * Returns the height		 * @return int		 */		public function get height():int{			return _height;		}				/**		 * Returns the top bound		 * @return Number		 */		public function get boundTop():Number{			return _boundTop;		}				/**		 * Return the right bound		 * @return Number		 */		public function get boundRight():Number{			return _boundRight;		}				/**		 * Returns the bottom bound		 * @return Number		 */		public function get boundBottom():Number{			return _boundBottom;		}				/**		 * Returns the left bound		 * @return Number		 */		public function get boundLeft():Number{			return _boundLeft;		}	}}