package com.dobuki.movieclip {	import flash.display.MovieClip;	import flash.events.Event;	import flash.display.BitmapData;	import flash.geom.Rectangle;	import flash.display.Bitmap;	import flash.geom.Matrix;	import flash.geom.Point;	import flash.display.PixelSnapping;		public class AutoScroller extends MovieClip {				protected var bitmapData:BitmapData;		protected var buffer:BitmapData;		protected var _scrollSpeed:Number = 1;		protected var _scrollPos:Number = 0;		protected var frame:int = 0;		protected var bitmap:Bitmap;				public function AutoScroller():void {						addEventListener(Event.ADDED_TO_STAGE,addedToStage);			addEventListener(Event.REMOVED_FROM_STAGE,removedFromStage);		}				public function set scrollSpeed(value:Number):void {			_scrollSpeed = value;		}				public function get scrollSpeed():Number {			return _scrollSpeed;		}				public function scroll(value:Number):void {			_scrollPos += value;		}				private function addedToStage(e:Event):void {			var rect:Rectangle = getBounds(this);			bitmapData = new BitmapData(Math.round(rect.width),Math.round(rect.height),true,0);			bitmapData.draw(this,new Matrix(1,0,0,1,Math.round(-rect.left),Math.round(-rect.top)),null,null,null,true);			bitmap = new Bitmap(bitmapData,PixelSnapping.NEVER);			buffer = new BitmapData(bitmap.width,bitmapData.height,true,0);			bitmap.x = rect.x;			bitmap.y = rect.y;			while(numChildren) {				removeChildAt(0);			}			addChild(bitmap);			addEventListener(Event.ENTER_FRAME,refresh);		}				private function removedFromStage(e:Event):void {			bitmapData.dispose();			bitmapData = null;			buffer.dispose();			buffer = null;			removeEventListener(Event.ENTER_FRAME,refresh);		}				private function refresh(e:Event):void {			_scrollPos += _scrollSpeed;			var scrollInt:int = int(_scrollPos);			if(scrollInt!=0) {				_scrollPos -= scrollInt;				var scrollAbs:int = Math.abs(scrollInt);				if(scrollInt>0) {					buffer.copyPixels(bitmapData,new Rectangle(0,0,scrollAbs,bitmapData.height),new Point());					bitmapData.copyPixels(bitmapData,new Rectangle(scrollAbs,0,bitmapData.width-scrollAbs,bitmapData.height),new Point());					bitmapData.copyPixels(buffer,new Rectangle(0,0,scrollAbs,buffer.height),new Point(bitmapData.width-scrollAbs,0));				}				else {					buffer.copyPixels(bitmapData,new Rectangle(0,bitmapData.width-scrollAbs,scrollAbs,bitmapData.height),new Point());					bitmapData.copyPixels(bitmapData,new Rectangle(0,0,bitmapData.width-scrollAbs,bitmapData.height),new Point(scrollAbs,0));					bitmapData.copyPixels(buffer,new Rectangle(0,0,scrollAbs,buffer.height),new Point(0,0));				}			}		}	}	}