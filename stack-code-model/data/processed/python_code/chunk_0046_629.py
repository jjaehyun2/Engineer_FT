//2Dベクトルクラスclass Vector {		public var x:Number;	public var y:Number;		public function Vector(px:Number, py:Number) {		x = px;		y = py;	}		public function dot(v:Vector):Number {		return x*v.x+y*v.y;	}		public function cross(v:Vector):Number {		return x*v.y-y*v.x;	}		public function plus(v:Vector):Vector {		return new Vector(x+v.x, y+v.y);	}		public function plusEquals(v:Vector):Vector {		x += v.x;		y += v.y;		return this;	}		public function minus(v:Vector):Vector {		return new Vector(x-v.x, y-v.y);	}		public function minusEquals(v:Vector):Vector {		x -= v.x;		y -= v.y;		return this;	}		public function mult(s:Number):Vector {		return new Vector(x*s, y*s);	}		public function multEquals(s:Number):Vector {		x *= s;		y *= s;		return this;	}		public function divEquals(s:Number):Vector {		if (s == 0) {			s = 0.0001;		}		x /= s;		y /= s;		return this;	}		public function magnitude():Number {		return Math.sqrt(x*x+y*y);	}		public function distance(v:Vector):Number {		var delta:Vector = this.minus(v);		return delta.magnitude();	}		public function normalize():Vector {		var m:Number = magnitude();		if (m == 0) {			m = 0.0001;		}		return mult(1/m);	}}