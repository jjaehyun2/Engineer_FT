/* * hexagonlib - Multi-Purpose ActionScript 3 Library. *       __    __ *    __/  \__/  \__    __ *   /  \__/HEXAGON \__/  \ *   \__/  \__/  LIBRARY _/ *            \__/  \__/ * * Licensed under the MIT License *  * Copyright (c) 2007-2008 Sascha Balkau / Hexagon Star Softworks *  * Permission is hereby granted, free of charge, to any person obtaining a copy of * this software and associated documentation files (the "Software"), to deal in * the Software without restriction, including without limitation the rights to * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of * the Software, and to permit persons to whom the Software is furnished to do so, * subject to the following conditions: *  * The above copyright notice and this permission notice shall be included in all * copies or substantial portions of the Software. *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */package tetragon.view.ui.event{	import flash.events.Event;		/**	 * The ComponentEvent class defines events that are associated	 * with the FUIComponent class.	 */	public class UIComponentEvent extends Event	{		////////////////////////////////////////////////////////////////////////////////////////		// Constants                                                                          //		////////////////////////////////////////////////////////////////////////////////////////				public static const BUTTON_DOWN:String	= "buttonDown";		public static const LABEL_CHANGE:String	= "labelChange";		public static const HIDE:String			= "hide";		public static const SHOW:String			= "show";		public static const RESIZE:String		= "resize";		public static const MOVE:String			= "move";		public static const ENTER:String		= "enter";		public static const CURSOR_UP:String	= "cursorUp";		public static const CURSOR_DOWN:String	= "cursorDown";						////////////////////////////////////////////////////////////////////////////////////////		// Public Methods                                                                     //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * Creates a new ComponentEvent object that contains information about a component 		 * event. A ComponentEvent object is passed as a parameter to an event listener.		 */		public function UIComponentEvent(type:String,										   bubbles:Boolean = false,										   cancelable:Boolean = false)		{			super(type, bubbles, cancelable);		}						/**		 * Returns a string that contains all the properties of the ComponentEvent object.		 * 		 * @return A string representation of the ComponentEvent object.		 */		override public function toString():String		{			return formatToString("ComponentEvent", "type", "bubbles", "cancelable");		}						/**		 * Creates a copy of the ComponentEvent object and sets the value of		 * each parameter to match the original.		 * 		 * @return A new ComponentEvent object with property values that match		 * those of the original.		 */		override public function clone():Event		{			return new UIComponentEvent(type, bubbles, cancelable);		}	}}